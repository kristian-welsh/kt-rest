/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package rest.framework

class Endpoint<T>(path: String){
	private val PATH_START = "root/"
	val path = PATH_START + path
	lateinit var lamb: ()->Response<T>?
	fun recieveGet(): Response<T>? {
		if(::lamb.isInitialized)
			return lamb()
		return null
	}
	fun get(lamb: ()->Response<T>? ) {
		this.lamb = lamb
	}
}


class HttpMethods(string: String) {
	companion object {
		val get = HttpMethods("get")
	}
}

class Request(rawData: Int?) {
}

class Response<T>(public val char: T? = null) {
	companion object {
		fun <U> response201(message: U):Response<U>? {
			return Response(message)
		}
		fun <U> response200(character: U?):Response<U>? {
			return Response(character)
		}
	}
}

class WebClient {
}

class WebServer(val path: String, val client: WebClient?) {
	fun start() {
		//val incoming = client?.listen()
		//val request = Request(incoming)
		//val response = responseFor<Character>(request)
		//client?.respond(response)
	}
	
	fun <T> responseFor(request: Request?): Response<T>? {
		return null
	}

	fun addEndpoint(endpoint: Endpoint<Character>) {
	}
}

fun main() {
}

